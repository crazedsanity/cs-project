$Id$
Last Author: $Author$

This file is for developers to help explain naming conventions used in CS-Project.  It is possible, even probable that many of these conventions have been broken in v1.x, due to the fact that there was no set standard. 

ANY SUBMISSION THAT BREAKS THESE STANDARDS WILL BE CATEGORICALLY DENIED.

------------------------------------------------------------------------------------
                                  ::::: CODE :::::
------------------------------------------------------------------------------------

Each class (or "library") for CS-Project goes in the /lib directory, with one file per class.  Normal (not abstract or interfaces) go into the root of /lib.  The basic naming convention:

{className}.{classType}.php

The "types" of classes are:
	* class (standard PHP class)
	* abstract (abstract PHP class; must be extended)
	* interface (like abstract, but only the names of methods can be defined)

EXAMPLE: The class is "testClass", which implements "standardInterface" and extends "databaseLayer". 

 Class Name				|| Type			|| Location/Filename
------------------------++--------------++----------------------
 testClass				|| class		|| /lib/testClass.class.php
 standardInterface		|| interface	|| /lib/standardInterface.interface.php
 databaseLayer			|| abstract		|| /lib/databaseLayer.abstract.php


** Functions **



------------------------------------------------------------------------------------
                                ::::: DATABASE :::::
------------------------------------------------------------------------------------

Database tables must be built in a very strict manner to ensure ease of scripting upgrades.  Failure to do so may result in unexpected problems with future versions.  The syntax is very strict to avoid having to add "exceptions to the rule".  The basic principles (the "base name" is the name without any prefixes or suffixes):

 * TABLES:
	-- must always be lowercase
	-- must always contain a unique non-null integer primary key (serial)
	-- must always end in "_table"
	-- SYNTAX: "{baseName}_id"
 * SEQUENCES:
	-- must always be lowercase
	-- must always end in "_seq"
	-- FORM: "{baseName}_table_{baseName}_id_seq" (default syntax for PostgreSQL serial key).
 * INDEXES:
	-- BASIC SYNTAX:::::: "{tableName}_{indexedColumn}_[pkey/fkey/index]"
	-- PRIMARY KEY INDEX: "{tableName}_{indexedColumn}_pkey"
	-- FOREIGN KEY INDEX: "{tableName}_{indexedColumn}_fkey"
	-- STANDARD INDEX:::: "{tableName}_{indexedColumn}_index"